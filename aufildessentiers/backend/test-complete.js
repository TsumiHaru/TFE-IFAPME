// test-complete.js - Test complet du syst√®me
import fetch from 'node-fetch';

const API_BASE = 'http://localhost:3000';

const testComplete = async () => {
  console.log('üöÄ Test complet du syst√®me Au Fil des Sentiers\n');

  try {
    // 1. Test de sant√© du serveur
    console.log('1Ô∏è‚É£ Test de sant√© du serveur...');
    const healthResponse = await fetch(`${API_BASE}/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ Serveur en ligne:', healthData);

    // 2. Test d'inscription
    console.log('\n2Ô∏è‚É£ Test d\'inscription...');
    const registerData = {
      email: 'test@aufildessentiers.com',
      password: 'motdepasse123',
      name: 'Test User'
    };

    const registerResponse = await fetch(`${API_BASE}/api/auth/register`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(registerData)
    });

    const registerResult = await registerResponse.json();
    console.log('‚úÖ Inscription:', registerResult.message);

    // 3. Test de connexion (devrait √©chouer car non v√©rifi√©)
    console.log('\n3Ô∏è‚É£ Test de connexion (non v√©rifi√©)...');
    const loginData = {
      email: 'test@aufildessentiers.com',
      password: 'motdepasse123'
    };

    const loginResponse = await fetch(`${API_BASE}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(loginData)
    });

    const loginResult = await loginResponse.json();
    console.log('‚ÑπÔ∏è Connexion (attendu):', loginResult.error);

    // 4. Test de connexion admin
    console.log('\n4Ô∏è‚É£ Test de connexion admin...');
    const adminLoginData = {
      email: 'admin@aufildessentiers.com',
      password: 'admin123'
    };

    const adminLoginResponse = await fetch(`${API_BASE}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(adminLoginData)
    });

    const adminLoginResult = await adminLoginResponse.json();
    console.log('‚úÖ Connexion admin:', adminLoginResult.message);

    if (adminLoginResult.accessToken) {
      const token = adminLoginResult.accessToken;

      // 5. Test des √©v√©nements
      console.log('\n5Ô∏è‚É£ Test des √©v√©nements...');
      const eventsResponse = await fetch(`${API_BASE}/api/events`);
      const eventsData = await eventsResponse.json();
      console.log('‚úÖ √âv√©nements r√©cup√©r√©s:', eventsData.events.length, '√©v√©nements');

      // 6. Test de cr√©ation d'√©v√©nement
      console.log('\n6Ô∏è‚É£ Test de cr√©ation d\'√©v√©nement...');
      const eventData = {
        title: 'Test Randonn√©e',
        description: 'Une randonn√©e de test pour v√©rifier le syst√®me',
        date: '2024-12-01T10:00:00Z',
        location: 'Paris, France',
        latitude: 48.8566,
        longitude: 2.3522,
        maxParticipants: 10
      };

      const createEventResponse = await fetch(`${API_BASE}/api/events`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify(eventData)
      });

      const createEventResult = await createEventResponse.json();
      console.log('‚úÖ √âv√©nement cr√©√©:', createEventResult.message);

      // 7. Test de participation √† un √©v√©nement
      if (createEventResult.event) {
        console.log('\n7Ô∏è‚É£ Test de participation √† l\'√©v√©nement...');
        const joinResponse = await fetch(`${API_BASE}/api/events/${createEventResult.event.id}/join`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });

        const joinResult = await joinResponse.json();
        console.log('‚úÖ Participation:', joinResult.message);
      }
    }

    // 8. Test des donn√©es publiques
    console.log('\n8Ô∏è‚É£ Test des donn√©es publiques...');
    const publicResponse = await fetch(`${API_BASE}/api/public/public-data`);
    const publicData = await publicResponse.json();
    console.log('‚ÑπÔ∏è Donn√©es publiques:', publicData.error || 'N√©cessite une API key');

    console.log('\nüéâ Tests termin√©s avec succ√®s !');
    console.log('\nüìã R√©sum√© :');
    console.log('   ‚úÖ Serveur op√©rationnel');
    console.log('   ‚úÖ Syst√®me d\'authentification fonctionnel');
    console.log('   ‚úÖ Gestion des √©v√©nements op√©rationnelle');
    console.log('   ‚úÖ Base de donn√©es connect√©e');
    console.log('\nüåê URLs importantes :');
    console.log('   Frontend: http://localhost:5173');
    console.log('   Backend: http://localhost:3000');
    console.log('   Carte des √©v√©nements: http://localhost:5173/events-map');
    console.log('   Admin: admin@aufildessentiers.com / admin123');

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error.message);
  }
};

testComplete();
